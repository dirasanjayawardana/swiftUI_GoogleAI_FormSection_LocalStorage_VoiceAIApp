//
//  StoriesView.swift
//  VoiceAI
//
//  Created by MACBOOK PRO on 24/04/24.
//

import SwiftUI

struct StoriesView: View {
    
    @State private var selectedTopic: Topics = .persahabatan
    @State private var selectedMood: Mood = .bahagia
    
    @StateObject private var storyVM = StoryVM()
    
    var body: some View {
        NavigationStack {
            Form {
                // picker view
                Section {
                    Picker(selection: $selectedTopic, content: {
                        ForEach(Topics.allCases, id:\.self) { topic in
                            Text(topic.rawValue)
                                .font(.subheadline)
                                .fontWeight(.bold)
                                .tag(topic)
                        }
                    }, label: {
                        Text("Choose topic")
                            .foregroundStyle(.gray)
                            .padding(.vertical, 8)
                    })
                    .tint(.primary)
                    
                    Picker(selection: $selectedMood, content: {
                        ForEach(Mood.allCases, id: \.self) { mood in
                            Text(mood.rawValue)
                                .font(.subheadline)
                                .fontWeight(.bold)
                                .tag(mood)
                        }
                    }, label: {
                        Text("Choose mood")
                            .foregroundStyle(.gray)
                            .padding(.vertical, 8)
                    })
                    .tint(.primary)
                } header: {
                    Text("Topics")
                } footer: {
                    Text("Choose any topics and mood that you want to listen.")
                }
                .fontWeight(.bold)
                
                // text editor
                Section(content: {
                    TextEditor(text: $storyVM.storyText)
                        .frame(height: 200)
                        .font(.system(.headline, design: .rounded))
                        .foregroundStyle(.blue)
                        .overlay(content: {
                            storyVM.isLoading ? ProgressView() : nil
                        })
                }, header: {
                    Text("Todays Story")
                }, footer: {
                    Text("This stories are generated by Gemini AI")
                })
                .fontWeight(.bold)
                
                // button generate
                Button(action: {
                    Task {
                        await handleGenerateStory()
                    }
                }, label: {
                    if storyVM.isLoading {
                        ProgressView().scaleEffect(1)
                    } else {
                        Text(storyVM.storyText.isEmpty ? "Generate".uppercased() : "Speech".uppercased())
                            .font(.system(.callout, design: .rounded))
                            .fontWeight(.bold)
                            .tint(.primary)
                    }
                })
                .buttonStyle(.plain)
                .frame(minWidth: 0, maxWidth: .infinity)

            }
            .navigationTitle("Stories")
        }
    }
}

#Preview {
    StoriesView()
}

extension StoriesView {
    func handleGenerateStory() async {
        await storyVM.generateStory(topic: selectedTopic, mood: selectedMood)
    }
}
